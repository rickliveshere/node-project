{
  "name": "grunt-spritefiles",
  "version": "0.0.2",
  "description": "Grunt task for creating image spritesheets",
  "main": "tasks/grunt-spritefiles.js",
  "scripts": {
    "test": "grunt test"
  },
  "keywords": [
    "grunt",
    "gruntplugin",
    "sprite",
    "spritesheet",
    "css",
    "spritesmith"
  ],
  "author": {
    "name": "Malcolm Studd",
    "email": "mstudd@recognia.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mestudd/grunt-spritefiles.git"
  },
  "license": "MIT",
  "dependencies": {
    "spritesmith": "~0.7.0",
    "json2css": "~1.2.0",
    "underscore": "~1.4.2",
    "url2": "*"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "readme": "grunt-spritefiles\n=================\nGrunt library for using [spritesmith](https://github.com/Ensighten/spritesmith), a spritesheet and CSS pre-processor utility.\n\nSynopsis\n--------\n[Spritesmith](https://github.com/Ensighten/spritesmith) accepts a list of images, stiches them together, and returns that image along with a coordinate map of where each image is located and its dimensions.\n\n[Grunt](https://github.com/gruntjs/grunt/) is a node.js based CLI build tool.\n\n[json2css](https://github.com/twolfson/json2css) converts the output from [Spritesmith](https://github.com/Ensighten/spritesmith) and generates variables and helper functions for hooking into inside of your CSS pre-processor.\n\nWhen you combine all three of these, you get a grunt plugin that makes maintaining sprites a breeze.\n\nGetting Started\n---------------\nInstall this grunt plugin next to your project's [grunt.js gruntfile](https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md) with: `npm install grunt-spritefiles`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-spritefiles');\n```\n\nRequirements\n------------\nSpritesmith supports multiple sprite engines however all of the current engines require external software to be installed. See [spritesmith](https://github.com/Ensighten/spritesmith) for instructions.\n\nWhy Use This Task\n-----------------\nShort answer: you probably don't. This task is mostly a copy of [grunt-spritesmith](https://github.com/Ensighten/grunt-spritesmith), and you probably want to use it instead.\n\nThis module was written for a large, complex, existing product that needed to programatically generate sprite-creation tasks and run custom processing for sprites without changing old workflow. It uses the typical grunt src/dest/files attributes to generate multiple sprites per task. The spritesmith results are passed to a function to allow any customised processing.\n\nUsage\n-----\n```js\n// Load package if using extra functions from it\nvar sprite = require('./src/grunt-spritefiles.js');\n\n// Provide a custom processing function\nvar customSprites = function(grunt, that, sprite, result) {\n  // grunt: Grunt object, as available to task\n  // that: this object from task\n  // sprite: grunt files object for sprite\n  // result: spritesmith result object\n  grunt.verbose.writeflags(sprite, 'Files');\n  grunt.verbose.writeflags(result.coordinates, 'Sprite coordinates');\n};\n\ngrunt.initConfig({\n  'sprite': {\n    'all': {\n      // Uses standard grunt src/dest/files attributes for building sprite image\n      'files': [\n        { dest: 'images/sprite.png', src: ['images/sprites/*.png'] },\n        { dest: 'images/sprite.png', src: ['images/sprites/*.png'],\n          // Processor function to run for each sprite\n          processor: sprite.cssFile( // write CSS file (matches grunt-spritesmith)\n            'css/sprite.json',  // css file location\n            {\n              // OPTIONAL: Specify CSS format (inferred from file's extension by default)\n                  // (stylus, scss, sass, less, json)\n              'cssFormat': 'json',\n\n              // OPTIONAL: Manual override for imgPath specified in CSS\n              'imgPath': '../sprite.png'\n            })\n        },\n        'options': {\n          // OPTIONAL: Specify algorithm (top-down, left-right, diagonal [\\ format],\n              // alt-diagonal [/ format], binary-tree [best packing])\n          'algorithm': 'alt-diagonal',\n\n          // OPTIONAL: Specify engine (auto, canvas, gm)\n          'engine': 'canvas',\n\n          // OPTIONAL: Specify img options\n          'imgOpts': {\n             // Format of the image (inferred from destImg' extension by default) (jpg, png)\n             'format': 'png',\n\n             // Quality of image (gm only)\n             'quality': 90\n          }\n        }\n      ]\n    },\n    'all': {\n      dest: 'images/custom.png',\n      src: ['images/*.gif'],\n      processor: customSprites\n    }\n  }\n});\n```\n\nContributing\n------------\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/gruntjs/grunt/) and test via `npm test`.\n\n### Algorithms\nAlgorithms are maintained via [twolfson/layout](https://github.com/twolfson/layout). If you would like to add one, please submit it via a pull request.\n\n### Engines and image options\nEngines and image options are maintained via [Ensighten/spritesmith](https://github.com/Ensighten/spritesmith). If you would like to add one, please submit it via a pull request.\n\n### CSS formats\nCSS formats are maintained via [twolfson/json2css](https://github.com/twolfson/json2css). If you would like to add one, please submit it via a pull request.\n\nLicense\n-------\nCopyright (c) 2012 Ensighten\nCopyright (c) 2013 Recognia Inc\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mestudd/grunt-spritefiles/issues"
  },
  "homepage": "https://github.com/mestudd/grunt-spritefiles",
  "_id": "grunt-spritefiles@0.0.2",
  "dist": {
    "shasum": "bd82c8a91ae503275310de9c4a7038a774653220"
  },
  "_from": "grunt-spritefiles@",
  "_resolved": "https://registry.npmjs.org/grunt-spritefiles/-/grunt-spritefiles-0.0.2.tgz"
}
